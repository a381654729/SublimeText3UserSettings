[
	{
		"keys": ["alt+ctrl+1"],
		"command": "set_setting", "args": {"value": 1, "setting": "tab_size"}
	},
	{
		"keys": ["alt+ctrl+2"],
		"command": "set_setting", "args": {"value": 2, "setting": "tab_size"}
	},
	{
		"keys": ["alt+ctrl+3"],
		"command": "set_setting", "args": {"value": 3, "setting": "tab_size"}
	},
	{
		"keys": ["alt+ctrl+4"],
		"command": "set_setting", "args": {"value": 4, "setting": "tab_size"}
	},
	{
		"keys": ["alt+down"],
		"command": "inc_dec_value", "args": {"action": "dec_min"}
	},
	{
		"keys": ["alt+down"],
		"command": "inc_dec_value", "args": {"action": "dec_min"}
	},
	{
		"keys": ["alt+f12"],
		"command": "cv", "args": {"type": "production", "paths": []}
	},
	{
		"keys": ["alt+up"],
		"command": "inc_dec_value", "args": {"action": "inc_min"}
	},
	{
		"keys": ["alt+up"],
		"command": "inc_dec_value", "args": {"action": "inc_min"}
	},
	{
		"keys": ["f1"],
		"command": "toggle_bookmark"
	},
	{
		"keys": ["f12"],
		"command": "cv", "args": {"type": "testing", "paths": []}
	},
	{
		"keys": ["f2"],
		"command": "prev_bookmark"
	},
	{
		"keys": ["f3"],
		"command": "next_bookmark"
	},
	{
		"keys": ["super+alt+ctrl+a"],
		"command": "alignment"
	},
	{
		"keys": ["super+alt+shift+a"],
		"command": "alignment"
	},
	{
		"keys": ["super+alt+shift+down"],
		"command": "inc_dec_value", "args": {"action": "dec_all"}
	},
	{
		"keys": ["super+alt+shift+up"],
		"command": "inc_dec_value", "args": {"action": "inc_all"}
	},
	{
		"keys": ["super+ctrl+alt+down"],
		"command": "jump_next_indent"
	},
	{
		"keys": ["super+ctrl+alt+up"],
		"command": "jump_prev_indent"
	},
	{
		"keys": ["super+ctrl+left"],
		"command": "move_text_left"
	},
	{
		"keys": ["super+ctrl+right"],
		"command": "move_text_right"
	},
	{
		"keys": ["super+shift+alt+d"],
		"command": "run_macro_file", "args": {"file": "Packages/User/Convert 2 spaces to 4 tabs.sublime-macro"}
	},
	{
		"keys": ["super+shift+alt+s"],
		"command": "run_macro_file", "args": {"file": "Packages/User/Spaces to Tabs.sublime-macro"}
	},
	{
		"keys": ["super+t"],
		"command": "show_overlay", "args": {"overlay": "command_palette"}
	},
	{
		"keys": ["tab"],
		"command": "expand_abbreviation_by_tab",

		// put comma-separated syntax selectors for which
		// you want to expandEmmet abbreviations into "operand" key
		// instead of SCOPE_SELECTOR.
		// Examples: source.js, text.html - source
		"context": [
			{
				"operand": "meta.group.braces.round.js, text.html",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			},

			// run only if there's no selected text
			{
				"match_all": true,
				"key": "selection_empty"
			},

			// don't work if there are active tabstops
			{
				"operator": "equal",
				"operand": false,
				"match_all": true,
				"key": "has_next_field"
			},

			// don't work if completion popup is visible and you
			// want to insert completion with Tab. If you want to
			// expand Emmet with Tab even if popup is visible --
			// remove this section
			{
				"operand": false,
				"operator": "equal",
				"match_all": true,
				"key": "auto_complete_visible"
			},
			{
				"match_all": true,
				"key": "is_abbreviation"
			}
		]
	},

	{
		"keys": ["f4"],
		"command": "dired",
		"args": { "immediate": true }
	}//,

	// {
	// 	"keys": ["tab"],
	// 	"command": "chain",
	// 	"args": {
	// 		"commands": [
	// 			["expand_abbreviation_by_tab"],
	// 			["reg_replace", {"replacements": ["js_class"]}]
	// 		]
	// 	},
	// 	"context": [
	// 		{"operand": "source.js", "operator": "equal", "match_all": true, "key": "selector"},
	// 		{"key": "preceding_text", "operator": "regex_contains", "operand": "(\\w+>\\w+|\\s(\\.?|a|div|span|p|button)\\.\\w+)", "match_all": true},
	// 		{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true}
	// 	]
	// }
]
